> normalize <- function(x) {
+   return ((x-min(x)) / (max(x) - min(x)))
+ }
> macbooki <- read.csv('Macbooki.csv')
> 
> macbooki_p <- macbooki[, c('pamiec_RAM', 'dysk', 'ekran', 'cena')]
> 
> macbooki_s <- as.data.frame(lapply(macbooki_p, normalize))
> 
> macbooki_train <- macbooki_s
> macbooki_test <- macbooki_s[1:3, ]
> 
> macbooki_nn <- neuralnet(cena ~ pamiec_RAM + dysk + ekran, data=macbooki_train, hidden=c(3,2), threshold=0.01)
> 
> print(macbooki_nn)
$call
neuralnet(formula = cena ~ pamiec_RAM + dysk + ekran, data = macbooki_train, 
    hidden = c(3, 2), threshold = 0.01)

$response
         cena
1  0.00000000
2  0.19480519
3  0.58441558
4  0.84415584
5  0.06493506
6  0.25974026
7  0.64935065
8  0.90909091
9  0.12987013
10 0.32467532
11 0.15584416
12 0.19480519
13 0.35064935
14 0.74025974
15 1.00000000

$covariate
      pamiec_RAM      dysk     ekran
 [1,]  0.0000000 0.0000000 0.0000000
 [2,]  0.0000000 0.0000000 0.0000000
 [3,]  0.3333333 0.3333333 0.3103448
 [4,]  0.3333333 0.3333333 1.0000000
 [5,]  0.0000000 0.0000000 0.1034483
 [6,]  0.3333333 0.3333333 0.1034483
 [7,]  0.3333333 0.3333333 0.3103448
 [8,]  1.0000000 0.9687500 1.0000000
 [9,]  0.0000000 0.3333333 0.1034483
[10,]  0.3333333 0.3333333 0.1034483
[11,]  0.3333333 0.3333333 0.1034483
[12,]  0.3333333 0.3333333 0.1034483
[13,]  0.3333333 0.3333333 0.1034483
[14,]  1.0000000 1.0000000 0.3103448
[15,]  1.0000000 1.0000000 1.0000000

$model.list
$model.list$response
[1] "cena"

$model.list$variables
[1] "pamiec_RAM" "dysk"       "ekran"     


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x0000023979631300>
<environment: 0x000002390295b388>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x0000023979649cb8>
<environment: 0x000002390295b858>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
   pamiec_RAM      dysk     ekran       cena
1   0.0000000 0.0000000 0.0000000 0.00000000
2   0.0000000 0.0000000 0.0000000 0.19480519
3   0.3333333 0.3333333 0.3103448 0.58441558
4   0.3333333 0.3333333 1.0000000 0.84415584
5   0.0000000 0.0000000 0.1034483 0.06493506
6   0.3333333 0.3333333 0.1034483 0.25974026
7   0.3333333 0.3333333 0.3103448 0.64935065
8   1.0000000 0.9687500 1.0000000 0.90909091
9   0.0000000 0.3333333 0.1034483 0.12987013
10  0.3333333 0.3333333 0.1034483 0.32467532
11  0.3333333 0.3333333 0.1034483 0.15584416
12  0.3333333 0.3333333 0.1034483 0.19480519
13  0.3333333 0.3333333 0.1034483 0.35064935
14  1.0000000 1.0000000 0.3103448 0.74025974
15  1.0000000 1.0000000 1.0000000 1.00000000

$exclude
NULL

$net.result
$net.result[[1]]
            [,1]
 [1,] 0.04018401
 [2,] 0.04018401
 [3,] 0.52563009
 [4,] 0.89933825
 [5,] 0.12924625
 [6,] 0.29323990
 [7,] 0.52563009
 [8,] 0.93467320
 [9,] 0.14061365
[10,] 0.29323990
[11,] 0.29323990
[12,] 0.29323990
[13,] 0.29323990
[14,] 0.75824768
[15,] 0.93474088


$weights
$weights[[1]]
$weights[[1]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.6530371  0.2463627 -0.4781146
[2,] -1.8327291 -1.5878430  0.7120259
[3,] -0.3024495  0.4715088 -0.1490824
[4,] -2.7713649 -1.0866466  3.6245879

$weights[[1]][[2]]
           [,1]        [,2]
[1,] -0.3254338 -0.04776952
[2,] -1.5883286 -1.66936232
[3,] -1.3539327  2.18218277
[4,]  1.8001576  0.26970443

$weights[[1]][[3]]
           [,1]
[1,] -0.6182613
[2,]  1.4490613
[3,]  0.6987326



$generalized.weights
$generalized.weights[[1]]
           [,1]        [,2]      [,3]
 [1,] 8.1138587  0.95213335 19.922942
 [2,] 8.1138587  0.95213335 19.922942
 [3,] 1.8913607  0.06263037  4.195597
 [4,] 1.0189960  0.06186314  1.964020
 [5,] 3.5854355  0.30171832  8.436299
 [6,] 2.4058807  0.12849923  5.469608
 [7,] 1.8913607  0.06263037  4.195597
 [8,] 0.3593068  0.03594947  1.074536
 [9,] 3.3167837  0.28243052  7.761126
[10,] 2.4058807  0.12849923  5.469608
[11,] 2.4058807  0.12849923  5.469608
[12,] 2.4058807  0.12849923  5.469608
[13,] 2.4058807  0.12849923  5.469608
[14,] 1.2166909 -0.02795349  3.296774
[15,] 0.3592246  0.03502519  1.076460


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
            [,1]       [,2]       [,3]
[1,] -0.05637997  1.0859118 -0.1634075
[2,] -1.65735647 -0.7340379 -0.3703354
[3,] -0.58252277  1.3253139 -0.4899273
[4,] -1.01500748 -0.7937231  1.6373076

$startweights[[1]][[2]]
           [,1]       [,2]
[1,] -0.7037333 -0.3402940
[2,] -0.3937015 -0.4747352
[3,] -1.5984278  1.9871877
[4,]  0.5284805 -1.0019727

$startweights[[1]][[3]]
           [,1]
[1,] -0.8897905
[2,]  0.6832114
[3,]  0.4235254



$result.matrix
                               [,1]
error                   0.045395719
reached.threshold       0.009233816
steps                  38.000000000
Intercept.to.1layhid1   0.653037146
pamiec_RAM.to.1layhid1 -1.832729131
dysk.to.1layhid1       -0.302449498
ekran.to.1layhid1      -2.771364877
Intercept.to.1layhid2   0.246362711
pamiec_RAM.to.1layhid2 -1.587843030
dysk.to.1layhid2        0.471508811
ekran.to.1layhid2      -1.086646598
Intercept.to.1layhid3  -0.478114627
pamiec_RAM.to.1layhid3  0.712025850
dysk.to.1layhid3       -0.149082389
ekran.to.1layhid3       3.624587923
Intercept.to.2layhid1  -0.325433817
1layhid1.to.2layhid1   -1.588328624
1layhid2.to.2layhid1   -1.353932744
1layhid3.to.2layhid1    1.800157597
Intercept.to.2layhid2  -0.047769524
1layhid1.to.2layhid2   -1.669362316
1layhid2.to.2layhid2    2.182182767
1layhid3.to.2layhid2    0.269704428
Intercept.to.cena      -0.618261286
2layhid1.to.cena        1.449061322
2layhid2.to.cena        0.698732584

attr(,"class")
[1] "nn"
> plot(macbooki_nn)
> 
> macbooki_results <- compute(macbooki_nn, macbooki_test)
> 
> ls(macbooki_results)
[1] "net.result" "neurons"   
> macbooki_comparison <- data.frame(actual=macbooki_test[,c('cena')], prediction=macbooki_results$net.result)
> macbooki_comparison
     actual prediction
1 0.0000000 0.04018401
2 0.1948052 0.04018401
3 0.5844156 0.52563009